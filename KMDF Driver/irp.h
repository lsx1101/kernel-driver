#pragma once
#include <ntddk.h>
#include"protect.h"
#include"memory.h"

#define READ_CODE			CTL_CODE(FILE_DEVICE_UNKNOWN, 0x803,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define WRITE_CODE			CTL_CODE(FILE_DEVICE_UNKNOWN, 0x804,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define READ_WRITE_CODE		CTL_CODE(FILE_DEVICE_UNKNOWN, 0x805,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define ADD_PROTECT_PID		CTL_CODE(FILE_DEVICE_UNKNOWN, 0x806,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define DEL_PROTECT_PID		CTL_CODE(FILE_DEVICE_UNKNOWN, 0x807,METHOD_BUFFERED,FILE_ANY_ACCESS)
#define READ_MEMORY			CTL_CODE(FILE_DEVICE_UNKNOWN, 0x808,METHOD_BUFFERED,FILE_ANY_ACCESS)

void Add_Pid(PIRP irp);
void Del_Pid(PIRP irp);
void Read_Memory_Pid(PIRP irp);
void Read_Data(PIRP irp);
void Write_Data(PIRP irp);
void Read_Write_Data(PIRP irp);
void DeviceControlHandle(PIRP irp);
NTSTATUS IRPHandle(PDEVICE_OBJECT driver, PIRP irp);